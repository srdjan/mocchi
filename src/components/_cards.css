/* ---- Card Components ---- */
@layer components {

  /* Base Card */
  .card,
  [component="card"] {
    background-color: var(--sm-bg);
    border-radius: var(--sm-radius-md);
    box-shadow: var(--sm-shadow-sm);
    padding: var(--sm-space);
    transition: transform var(--sm-transition), box-shadow var(--sm-transition);
    border: 1px solid var(--sm-border);
    overflow: hidden;
  }

  .card:hover,
  [component="card"]:hover {
    box-shadow: var(--sm-shadow-md);
    transform: translateY(-2px);
  }

  /* Card with image */
  .card img:first-child,
  [component="card"] img:first-child {
    margin: calc(var(--sm-space) * -1) calc(var(--sm-space) * -1) var(--sm-space);
    max-width: calc(100% + var(--sm-space) * 2);
    border-radius: var(--sm-radius-md) var(--sm-radius-md) 0 0;
  }

  /* Card header */
  .card-header,
  [component="card-header"] {
    margin-bottom: var(--sm-space-sm);
    display: flex;
    flex-direction: column;
    gap: var(--sm-space-2xs);
  }

  .card-header h2,
  .card-header h3,
  [component="card-header"] h2,
  [component="card-header"] h3 {
    margin: 0;
    font-weight: var(--sm-weight-semibold);
    color: var(--sm-fg);
  }

  .card-header p,
  [component="card-header"] p {
    margin: 0;
    color: var(--sm-subtle);
    font-size: var(--sm-font-sm);
  }

  /* Card footer */
  .card-footer,
  [component="card-footer"] {
    margin-top: var(--sm-space);
    padding-top: var(--sm-space-sm);
    border-top: 1px solid var(--sm-border);
    display: flex;
    justify-content: flex-end;
    gap: var(--sm-space-sm);
  }

  /* Card variants */
  .card[variant="outline"],
  [component="card"][variant="outline"] {
    box-shadow: none;
    border: 1px solid var(--sm-border-strong);
  }

  .card[variant="elevated"],
  [component="card"][variant="elevated"] {
    box-shadow: var(--sm-shadow-md);
  }

  /* Card sections */
  .card>.content,
  .card-body,
  [component="card"]>[component="content"],
  [component="card"]>.content {
    padding: var(--card-padding);
    flex: 1 1 auto;

    &> :first-child {
      margin-top: 0;
    }

    &> :last-child {
      margin-bottom: 0;
    }
  }

  .card>footer,
  .card-footer,
  [component="card"]>footer {
    padding: var(--card-padding);
    border-top: 1px solid var(--sm-border);
    background-color: var(--sm-input-bg);

    &> :first-child {
      margin-top: 0;
    }

    &> :last-child {
      margin-bottom: 0;
    }
  }

  /* Card image */
  .card>img,
  .card-image,
  [component="card"]>img {
    width: 100%;
    height: auto;
    object-fit: cover;
    display: block;
  }

  /* Card variations */
  .card[primary],
  [component="card"][primary] {
    border-top: 4px solid var(--sm-accent);
  }

  .card[success],
  [component="card"][success] {
    border-top: 4px solid var(--sm-success);
  }

  .card[warning],
  [component="card"][warning] {
    border-top: 4px solid var(--sm-warning);
  }

  .card[error],
  [component="card"][error] {
    border-top: 4px solid var(--sm-error);
  }

  /* Card sizes */
  .card[size="sm"],
  [component="card"][size="sm"] {
    --card-padding: var(--sm-space-sm);
  }

  .card[size="lg"],
  [component="card"][size="lg"] {
    --card-padding: var(--sm-space-md);
  }

  /* Horizontal card layout */
  .card[horizontal],
  [component="card"][horizontal] {
    flex-direction: row;

    &>img {
      width: 33%;
      height: 100%;
    }

    @media (max-width: 768px) {
      flex-direction: column;

      &>img {
        width: 100%;
      }
    }
  }

  /* Interactive card */
  .card[interactive],
  [component="card"][interactive] {
    cursor: pointer;
    transition:
      transform var(--sm-transition-fast),
      box-shadow var(--sm-transition-fast),
      background-color var(--sm-transition-fast);

    &:hover {
      background-color: color-mix(in srgb, var(--card-bg) 97%, var(--sm-accent));
      transform: translateY(-2px);
      box-shadow: var(--sm-shadow-md);
    }

    &:active {
      transform: translateY(0);
      box-shadow: var(--sm-shadow-sm);
    }
  }

  /* Card grid layout */
  .card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--sm-space);
  }
}
